# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule ZoomAPI.Model.AccountPlans do
  @moduledoc """
  Account Plans object.
  """

  @derive [Poison.Encoder]
  defstruct [
    :plan_base,
    :plan_zoom_rooms,
    :plan_room_connector,
    :plan_large_meeting,
    :plan_webinar,
    :plan_recording,
    :plan_audio
  ]

  @type t :: %__MODULE__{
          :plan_base => ZoomAPI.Model.InlineResponse2003PlanBase.t(),
          :plan_zoom_rooms => ZoomAPI.Model.InlineResponse2003PlanZoomRooms.t(),
          :plan_room_connector => ZoomAPI.Model.InlineResponse2003PlanZoomRooms.t(),
          :plan_large_meeting => [ZoomAPI.Model.InlineResponse2003PlanZoomRooms.t()],
          :plan_webinar => [ZoomAPI.Model.InlineResponse2003PlanZoomRooms.t()],
          :plan_recording => String.t(),
          :plan_audio => ZoomAPI.Model.InlineResponse2003PlanAudio.t()
        }
end

defimpl Poison.Decoder, for: ZoomAPI.Model.AccountPlans do
  import ZoomAPI.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:plan_base, :struct, ZoomAPI.Model.InlineResponse2003PlanBase, options)
    |> deserialize(
      :plan_zoom_rooms,
      :struct,
      ZoomAPI.Model.InlineResponse2003PlanZoomRooms,
      options
    )
    |> deserialize(
      :plan_room_connector,
      :struct,
      ZoomAPI.Model.InlineResponse2003PlanZoomRooms,
      options
    )
    |> deserialize(
      :plan_large_meeting,
      :list,
      ZoomAPI.Model.InlineResponse2003PlanZoomRooms,
      options
    )
    |> deserialize(:plan_webinar, :list, ZoomAPI.Model.InlineResponse2003PlanZoomRooms, options)
    |> deserialize(:plan_audio, :struct, ZoomAPI.Model.InlineResponse2003PlanAudio, options)
  end
end
